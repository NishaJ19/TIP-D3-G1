import pandas as pd
from hybrid_malware_detector import HybridMalwareDetector

def load_and_preprocess_data(file_path):
    # Read the CSV file
    df = pd.read_csv(file_path)
    
    # Create an instance of the HybridMalwareDetector
    detector = HybridMalwareDetector()
    
    # Preprocess the data
    processed_df = detector.preprocess_data(df)
    
    # Split features and target labels
    X = processed_df.drop(['label', 'attack_cat'], axis=1)
    y = processed_df['label']
    
    return X, y, detector

def main():
    # Specify the path to the new dataset
    file_path = 'UNSW_NB15_testing-set.csv'  # Update this to your dataset path
    print("Loading and preprocessing the dataset...")
    
    # Load and preprocess the data
    X, y, detector = load_and_preprocess_data(file_path)
    
    # Train the hybrid malware model
    print("Training the hybrid malware model...")
    metrics = detector.train(X, y)
    
    # Output the metrics
    print("\nTraining completed successfully!")
    print("\nClassification Report:")
    for class_label, metrics_dict in metrics['classification_report'].items():
        if isinstance(metrics_dict, dict):
            print(f"\nClass {class_label}:")
            for metric_name, value in metrics_dict.items():
                print(f"{metric_name}: {value:.4f}")
    
    # Save the trained model
    print("\nSaving the model...")
    detector.save_model('model_malware.joblib')
    print("Model saved successfully!")

if __name__ == "__main__":
    main()
